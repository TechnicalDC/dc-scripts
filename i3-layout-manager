#!/bin/bash

#			   ___ __        __                           __   
# .----.-----.'  _|__|______|  |.---.-.--.--.-----.--.--.|  |_ 
# |   _|  _  |   _|  |______|  ||  _  |  |  |  _  |  |  ||   _|
# |__| |_____|__| |__|      |__||___._|___  |_____|_____||____|
#				                      |_____|                  

# Author: Dilip Chauhan
# Github: https://github/TechnicalDC

# This is simple script for managing i3 layouts.
# NOTE: It's messy
# Rquires: 
#		- Vim
#		- Rofi
#		- Jq

# Setting defaults
LAYOUT_DIR="$HOME/.config/i3/layouts"
EDIT_CMD="vim"
TERMINAL="st"

edit_layout () {
	$EDIT_CMD --headless -c ':%s/\/\/ "/\t"/' -c 'wqa' -- $1
}

save_layout () {
	
	SAVE_AS=$(rofi -dmenu -p " ")
	CURRENT_WORKSPACE=$(i3-msg -t get_workspaces \
		| jq '.[] | select(.focused==true).name' \
		| cut -d"\"" -f2)

	if [ "$SAVE_AS" = "" ] ; then
		SAVE_AS="workspace-$CURRENT_WORKSPACE"
	fi

	i3-save-tree -workspace $CURRENT_WORKSPACE > $LAYOUT_DIR/$SAVE_AS.json

	edit_layout $LAYOUT_DIR/$SAVE_AS.json
	notify-send -a 'i3' 'layout saved'
}

get_layout () {
	echo $(ls $LAYOUT_DIR | rofi -dmenu -p '璉 ')
}

restore_layout () {
	i3-msg "append_layout $LAYOUT_DIR/$1" 2> /dev/null
}

launch_apps () {
	grep -e "instance" $LAYOUT_DIR/$1 \
		| tr '[:upper:]' '[:lower:]' \
		| sed -e 's/"^\?//g' -e 's/://g' -e 's/\$,\?"\?//g' > /tmp/nodes
	while read LINE ; do
		VAL=$(echo $LINE | cut -d' ' -f2)
		echo $LINE
		$TERMINAL -n $VAL -e $VAL &
	done < /tmp/nodes
}

delete_layout () {
	rm $LAYOUT_DIR/$1
}

OPTION1=" Save current layout" 
OPTION2="淚 Restore layout" 
OPTION3=" Delete layout"
SELECT=$(echo -e "$OPTION1\n$OPTION2\n$OPTION3" | rofi -dmenu -p '璉 ' -sep '\n')

case $SELECT in
	$OPTION1)
		save_layout
		;;
	$OPTION2)
		LAYOUT=$(get_layout)
		restore_layout $LAYOUT
		launch_apps $LAYOUT
		;;
	$OPTION3)
		LAYOUT=$(get_layout)
		delete_layout $LAYOUT
		;;
esac
